<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.powerrangers.system.modules.EventManagement.dao.EventMapper">

    <sql id="event_name">
        <if test="eventName != null and eventName.length() > 0">
            where host_id = #{hostId} and event_name = #{eventName}
        </if>
    </sql>

    <insert id="createEvent" parameterType="com.powerrangers.system.modules.EventManagement.service.dto.SmallEventDTO">
        insert into sys_event (host_id, event_name, event_type, location,
                               start_time, end_time, is_displayed, image, description)
        values (#{hostId}, #{eventName}, #{eventType}, #{location},
                #{startTime}, #{endTime}, #{isDisplayed}, #{image}, #{description});
    </insert>

    <insert id="createEventInsertFullPriceTicket" parameterType="com.powerrangers.system.modules.EventManagement.service.dto.SmallEventDTO">
        insert into event_ticket (event_id, ticket_type, ticket_amount, ticket_price)
        values ((select event_id from sys_event where host_id = #{hostId} and event_name = #{eventName}), 1, #{ticketAmount}, #{ticketPrice});
    </insert>

    <select id="checkExist" parameterType="com.powerrangers.system.modules.EventManagement.service.dto.EventModifyDTO"
            resultType="Integer">
        select count(*) from sys_event
        <include refid="event_name"/>;
    </select>

    <select id="updateEventName" parameterType="com.powerrangers.system.modules.EventManagement.service.dto.EventModifyDTO">
        update sys_event set event_name = #{newString}
        <include refid="event_name"/>;
    </select>

    <select id="updateEventTime" parameterType="com.powerrangers.system.modules.EventManagement.service.dto.EventModifyDTO">
        update sys_event set start_time = #{newStartTime}, end_time = #{newEndTime}
        <include refid="event_name"/>;
    </select>

    <select id="updateEventDescription" parameterType="com.powerrangers.system.modules.EventManagement.service.dto.EventModifyDTO">
        update sys_event set description = #{newString}
        <include refid="event_name"/>;
    </select>

    <select id="updateEventAddress" parameterType="com.powerrangers.system.modules.EventManagement.service.dto.EventModifyDTO">
        update sys_event set location = #{newString}, site_description = #{secondNewString}
        <include refid="event_name"/>;
    </select>

    <select id="updateEventType" parameterType="com.powerrangers.system.modules.EventManagement.service.dto.EventModifyDTO">
        update sys_event set event_type = #{newInteger}
        <include refid="event_name"/>;
    </select>

    <select id="changeEventCancelState" parameterType="com.powerrangers.system.modules.EventManagement.service.dto.EventModifyDTO">
        update sys_event set is_cancelled = #{newInteger}
        <include refid="event_name"/>;
    </select>

    <select id="changeEventDisplayState" parameterType="com.powerrangers.system.modules.EventManagement.service.dto.EventModifyDTO">
        update sys_event set is_displayed = #{newInteger}
        <include refid="event_name"/>;
    </select>

    <select id="changeEventTag" parameterType="com.powerrangers.system.modules.EventManagement.service.dto.EventModifyDTO">
        update sys_event set event_tag = #{newString}
        <include refid="event_name"/>;
    </select>

    <select id="queryEvent" parameterType="com.powerrangers.system.modules.EventManagement.service.dto.EventModifyDTO"
                            resultType="com.powerrangers.system.modules.EventManagement.service.dto.EventDTO">
        select * from sys_event
        <include refid="event_name"/>
        order by start_time desc;
    </select>

    <select id="getEvents" parameterType="integer"
                            resultType="com.powerrangers.system.modules.EventManagement.service.dto.EventDTO">
        select e.*, t.ticket_type, t.ticket_amount, t.ticket_price from sys_event e, event_ticket t
        where e.event_id = t.event_id and t.ticket_type = 1 and
                e.host_id = #{hostId} order by e.start_time desc;
    </select>

    <select id="getAllEvents" parameterType="com.powerrangers.system.modules.EventManagement.service.dto.EventFilterDTO"
                                resultType="com.powerrangers.system.modules.EventManagement.service.dto.EventDTO">
        select e.*, t.ticket_type, t.ticket_amount, t.ticket_price,
               (select username from sys_user where id = e.host_id) as hostName
                from sys_event e, event_ticket t
        <where>
            e.event_id = t.event_id and t.ticket_type = 1
            <if test="location != null and location.length() != 0 and location != ''">
                and location = #{location}
            </if>
            <if test="starLevel != null and starLevel != 0 and starLevel lte 5">
                and star_level <![CDATA[ >= ]]> #{starLevel}
            </if>
            <if test="minPrice != null and maxPrice != null and minPrice lte maxPrice">
                and t.ticket_price <![CDATA[ >= ]]> #{minPrice}
                and t.ticket_price <![CDATA[ <= ]]> #{maxPrice}
            </if>
            <if test="online != null">
                and online = #{online}
            </if>
            <if test="eventType != null and eventType != 0">
                and event_type = #{eventType}
            </if>
            and is_displayed = 1
        </where>
        order by start_time desc;
    </select>

    <select id="searchEvents" parameterType="string"
            resultType="com.powerrangers.system.modules.EventManagement.service.dto.EventDTO">
        select * from sys_event where event_name LIKE CONCAT('%',#{keyWords},'%') or event_tag LIKE CONCAT('%',#{keyWords},'%')
        or event_type in (select type_id from event_type where type_name LIKE CONCAT('%',#{keyWords},'%'))
        or host_id in (select id from sys_user where username LIKE CONCAT('%',#{keyWords},'%'))
        or description LIKE CONCAT('%',#{keyWords},'%');
    </select>

    <select id="checkUserExist" parameterType="string"
            resultType="Integer">
        select count(*) from sys_user where username = #{userName};
    </select>

    <select id="checkSpendingHistory" parameterType="string"
            resultType="Integer">
        select count(*) from sys_order where customer_id = (select id from sys_user where username = #{userName});
    </select>


    <select id="getSpendingHistory" parameterType="string"
    resultType="com.powerrangers.system.modules.EventManagement.service.dto.OrderDTO">
        select sys_order.event_id as eventId, sys_event.event_name as eventName, event_type.type_name as eventType,
        user1.username as customerName, user2.username as hostName, sys_event.description as description,
        order_payment_type.type_name as paymentType, sys_order.payment_amount as paymentAmount from
        sys_order inner join sys_event on sys_event.event_id = sys_order.event_id inner join event_type on sys_event.event_type = event_type.type_id
        inner join sys_user as user1 on sys_order.customer_id = user1.id inner join sys_user as user2 on sys_order.host_id = user2.id inner join
        order_payment_type on sys_order.payment_type = order_payment_type.type_id where sys_order.customer_id =
        (select id from sys_user where username = #{userName});

    </select>

    <update id="updateStarLevel" parameterType="com.powerrangers.system.modules.EventManagement.service.dto.EventDTO">
        update sys_event set star_level = #{starLevel} where
        host_id = #{hostId} and event_name = #{eventName};
    </update>

    <select id="getOneMonthEvents" parameterType="com.powerrangers.system.modules.EventManagement.service.dto.EventFilterDTO"
                                    resultType="com.powerrangers.system.modules.EventManagement.service.dto.EventDTO">
        select e.*, t.ticket_type, t.ticket_amount, t.ticket_price,
        (select username from sys_user where id = e.host_id) as hostName
        from sys_event e, event_ticket t
        <where>
            e.event_id = t.event_id and t.ticket_type = 1
            <if test="location != null and location.length() != 0 and location != ''">
                and location = #{location}
            </if>
            <if test="starLevel != null and starLevel != 0 and starLevel lte 5">
                and star_level <![CDATA[ >= ]]> #{starLevel}
            </if>
            <if test="minPrice != null and maxPrice != null and minPrice lte maxPrice">
                and t.ticket_price <![CDATA[ >= ]]> #{minPrice}
                and t.ticket_price <![CDATA[ <= ]]> #{maxPrice}
            </if>
            <if test="online != null">
                and online = #{online}
            </if>
            <if test="eventType != null and eventType != 0">
                and event_type = #{eventType}
            </if>
            and is_displayed = 1
            and start_time <![CDATA[ <= ]]> DATE_ADD(now(), INTERVAL 1 MONTH)
            and start_time <![CDATA[ >= ]]> now()
        </where>
        order by start_time desc;
    </select>

    <select id="randomRecommendation"
            resultType="com.powerrangers.system.modules.EventManagement.service.dto.EventDTO">
        select  *  from  sys_event where is_displayed = 1 order by rand() limit 10;
    </select>

    <select id="getEventsByType" parameterType="String"
            resultType="com.powerrangers.system.modules.EventManagement.service.dto.EventDTO">
        select  *  from  sys_event where is_displayed = 1 and event_type = (select type_id from event_type where type_name = #{typeName});
    </select>
</mapper>